services:
    http-api-gateway:
        build:
            context: .
            dockerfile: ./apps/http-api-gateway/Dockerfile
            target: development
        command: npm run start:dev http-api-gateway
        ports:
            - '${PORT}:${PORT}'
        volumes:
            - ./apps/http-api-gateway:/usr/src/app
            - /apps/http-api-gateway/node_modules
            - ./logs:/usr/src/apps/logs
        depends_on:
            - nats
            - postgres
        # networks:
        #     - microservice-with-nestjs-monorepo-architecture
    app2:
        build:
            context: .
            dockerfile: ./apps/app2/Dockerfile
            target: development
        command: npm run start:dev app2
        volumes:
            - ./apps/app2:/usr/src/app
            - /apps/app2/node_modules
            - ./logs:/usr/src/apps/logs
        depends_on:
            - nats
        # networks:
        #     - microservice-with-nestjs-monorepo-architecture
    nats:
        image: nats:latest
        environment:
            - ${NATS_URI}
        ports:
            - ${NATS_PORT}:${NATS_PORT}

            # postgres database
    postgres:
        restart: always
        image: postgres:latest
        ports:
            - '${POSTGRES_PORT}:${POSTGRES_PORT}'
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - postgres-data:/var/lib/postgresql/data

volumes:
    postgres-data:
